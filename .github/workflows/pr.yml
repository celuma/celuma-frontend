name: pr

on:
  pull_request:
    branches:
      - main

concurrency:
  group: pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  lint-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  docker-pr-build:
    runs-on: ubuntu-latest
    needs: lint-build
    if: needs.lint-build.result == 'success'

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU (multi-arch emulation)
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image for PR testing
        id: buildpush
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            VITE_API_BASE_URL=${{ vars.VITE_API_BASE_URL || '/api' }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository }}:pr-${{ github.event.number }}-${{ github.sha }}
            ghcr.io/${{ github.repository }}:pr-${{ github.event.number }}-latest
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.ref=${{ github.ref }}
            org.opencontainers.image.title=PR-${{ github.event.number }}-Test-Image
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image reference
        run: |
          echo "### 🐳 PR Docker Image for Testing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Use these tags to test the PR code:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository }}:pr-${{ github.event.number }}-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository }}:pr-${{ github.event.number }}-latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Docker run command:**" >> $GITHUB_STEP_SUMMARY
          echo "\`docker run -p 5173:80 ghcr.io/${{ github.repository }}:pr-${{ github.event.number }}-latest\`" >> $GITHUB_STEP_SUMMARY


